{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://Ontyme/./src/Delay.ts","webpack://Ontyme/./src/Limiter.ts","webpack://Ontyme/./src/Queue.ts","webpack://Ontyme/webpack/bootstrap","webpack://Ontyme/./src/index.ts"],"sourcesContent":["type callFunc<T> = (...args: any) => T;\r\ntype ReuseCall<T> = [Promise<any>, (func: callFunc<T>, milsDelay: number) => ReuseCall<T>, number?];\r\n\r\nexport class Delay {\r\n    // Holds all of the timeouts currently happening\r\n    private static timeouts: Map<number, number> = new Map();\r\n    // Holds all of the functions to be called when the timeout end or the page blurs\r\n    private static functions: Map<number, (...args: any) => any> = new Map();\r\n    // Holds all of the override listeners for promises, so they know when to delay resolve\r\n    private static overrideListeners: Map<number, (func: callFunc<any>, milsDelay: number) => any> = new Map();\r\n\r\n    /**\r\n     * A bulkified debouncer for calls\r\n     * All operations are aggregated for when you need \r\n     * \r\n     * @param func the function to call after the timeout\r\n     * @param milsDelay the delay for the timeout\r\n     * @param registerId a unique identifier for the caller, will be automatically created when not provided, reuse the identifier for resetting the delay\r\n     * @returns An object holding the promise created, a re-usable function for the same operation and the id created for the operation\r\n     */\r\n    public static callOnceReleased<T>(func: callFunc<T>, milsDelay: number, registerId?: number): {delay: (func: callFunc<T>, milsDelay: number) => ReuseCall<T>, id?: number} {\r\n        let id = registerId;\r\n        // If the id exists, override the current function call and delay\r\n        if (id && this.overrideListeners.has(id)) this.override(func, milsDelay, id);\r\n        else if (id == null) id = this.createRandomIdentifier(); // If the id does not exist, create it\r\n        // ^ if the use entered a custom id that is the one that will be used\r\n        // If the override listener does not exist (first call) create it\r\n        if(!this.functions.has(id)) {\r\n            this.onOverride((overrideFunc, overrideMilsDelay) => {\r\n                // Set the function to the new function\r\n                this.functions.set(id, overrideFunc);\r\n                // Clear the timeout and create a new one\r\n                window.clearTimeout(this.timeouts.get(id));\r\n                this.timeouts.set(id, this.createTimeout(overrideFunc, overrideMilsDelay, id));\r\n            }, id);\r\n            // Register the new function, for when we want to unload / blur the page\r\n            this.functions.set(id, func);\r\n            // Set the new timeout\r\n            this.timeouts.set(id, this.createTimeout(func, milsDelay, id));\r\n        }\r\n        // Return the same delay function and the id\r\n        return {\r\n            delay: ((overrideFunc: callFunc<T>, overrideMilsDelay: number) => this.callOnceReleased(overrideFunc, overrideMilsDelay, id)).bind(id),\r\n            id\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove the operation, and cancel it if you wish\r\n     * @param id The id of the operation to cancel\r\n     * @param clearTimeout Should clear timeout\r\n     */\r\n    public static purge(id: number, clearTimeout: boolean = true) {\r\n        // Remove all of the nodes for this request\r\n        if (clearTimeout) {\r\n            window.clearTimeout(this.timeouts.get(id));\r\n        }\r\n        this.timeouts.delete(id);\r\n        this.overrideListeners.delete(id);\r\n        this.functions.delete(id);\r\n    }\r\n\r\n    /**\r\n     * Use to register an event that will fire all callbacks when the page blurs / unloads\r\n     */\r\n    public static registerCallStackOnPageBlur(): void {\r\n        this.unloadCallsEvent(false);\r\n    }\r\n\r\n    /**\r\n     * Remove the events that will trigger when the page unloads / blurs\r\n     */\r\n    public static removeCallStackOnPageExit() {\r\n        this.unloadCallsEvent(true);\r\n    }\r\n\r\n    /**\r\n     * Overrides an existing operation's callback function and delay, and notifies subscribers\r\n     * @param func A new callback function for th opeartion\r\n     * @param milsDelay A new delay for the operation\r\n     * @param id A unique identifier for th operation\r\n     */\r\n    private static override<T>(func: callFunc<T>, milsDelay: number, id: number) {\r\n        const overrideListener = this.overrideListeners.get(id);\r\n        overrideListener(func, milsDelay);\r\n    }\r\n\r\n    /**\r\n     * A subscriber-like function that is used when the user overrides the current operation with a new callback and delay\r\n     * @param call A callback function accepting the new func and new delay given by the user\r\n     * @param id A unique identifier for this operation\r\n     */\r\n    private static onOverride<T>(call: (func: callFunc<T>, milsDelay: number) => void, id: number) {\r\n        this.overrideListeners.set(id, call);\r\n    }\r\n\r\n    /**\r\n     * Creates a timeout for the callback function, returns an id of the callback function\r\n     * \r\n     * @param func The callback function to call once the delay has ended\r\n     * @param milsDelay The time to wait in milliseconds\r\n     * @param id The unique identifier for this operation\r\n     * @returns The identifier of the createTimeout function\r\n     */\r\n    private static createTimeout<T>(func: callFunc<T>, milsDelay: number, id: number): number {\r\n        return window.setTimeout(() => {\r\n            try {\r\n                func();\r\n                this.purge(id);\r\n            } catch(e) {\r\n                console.error(e);\r\n                this.purge(id);\r\n                throw e;\r\n            }\r\n        }, milsDelay);\r\n    }\r\n\r\n    /**\r\n     * Create / Remove event listeners used when the page unloads / blurs\r\n     * @param remove boolean indicating whether or not this functions removes or adds the event listeners\r\n     * @returns \r\n     */\r\n    private static unloadCallsEvent(remove: boolean = false) {\r\n        if (remove) {\r\n            window.removeEventListener('beforeunload', () => this.unloadProcedure());\r\n            window.removeEventListener('blur', () => this.unloadProcedure());\r\n            return;\r\n        }\r\n        // NOTE: This will fire if you focus the developer console\r\n        window.addEventListener('beforeunload', () => this.unloadProcedure());\r\n        window.addEventListener('blur', () => this.unloadProcedure());\r\n    }\r\n\r\n    /**\r\n     * Creates a unique identifier for debounce calls\r\n     * @returns A \"unique\" identifier for the debounce calls\r\n     */\r\n    private static createRandomIdentifier(): number {\r\n        return Math.round(Math.random() * 10000); // Random number up to 10000, should be enough... should probably replace\r\n    }\r\n\r\n    /**\r\n     * Call all of the functions in the map\r\n     */\r\n    private static unloadProcedure(): void {\r\n        this.functions.forEach((func, id) => {\r\n            func();\r\n            this.purge(id, true);\r\n        });\r\n    }\r\n}\r\n","import Queue from \"./Queue\";\r\ntype AnyFunction = (...args: any) => any;\r\n\r\nexport enum LimiterMode {\r\n  Clear,\r\n  Spread\r\n}\r\n\r\nexport class Limiter {\r\n  private timestamps: Queue<number> = Queue.create();\r\n  private requestQueue: Queue<(...args: any) => any> = Queue.create();\r\n\r\n  /**\r\n   * Setup a rate limiter for making function calls using a time-frame and the number\r\n   * of calls you can make in that time-frame\r\n   * @param numOfCalls Number of calls you can make in time-frame\r\n   * @param milsInterval The time-frame in milliseconds\r\n   */\r\n  constructor(private numOfCalls: number, private milsInterval: number, mode: LimiterMode = LimiterMode.Clear) {}\r\n\r\n  public async call(funcs: Array<AnyFunction>): Promise<Array<any>> {\r\n    this.requestQueue.bulkEnqueue(funcs);\r\n    // The results array\r\n    const results: Array<any> = new Array();\r\n    // Make all of the calls until the queue is done (generator is finished)\r\n    for await (const result of this.makeCalls()) {\r\n      results.push(result);\r\n    }\r\n    // Resolve a promise all, this is good for when you have multiple calls that all depend on each other\r\n    return Promise.all(results);\r\n  }\r\n\r\n  public push(funcs: Array<AnyFunction> | AnyFunction): void {\r\n    if (funcs instanceof Array) {\r\n      this.requestQueue.bulkEnqueue(funcs);\r\n    } else {\r\n      this.requestQueue.enqueue(funcs);\r\n    }\r\n  }\r\n\r\n  /** \r\n   * A generator for calling the functions given to the queue\r\n   */\r\n  private async *makeCalls(): any {\r\n    while(this.requestQueue.length > 0) {\r\n      // If can make call outright\r\n      if (this.canMakeCall()) {\r\n        this.timestamps.enqueue(Date.now());\r\n        yield (this.requestQueue.dequeue()());\r\n        continue;\r\n      }\r\n      // If cant make call, start an interval until time clears\r\n      // This will not wait for functions that are promises them-selves\r\n      yield await new Promise(resolve => {\r\n        window.setTimeout(() => {\r\n          this.timestamps.enqueue(Date.now());\r\n          const res = (this.requestQueue.dequeue())();\r\n          resolve(res);\r\n        }, this.milsUntilNextCall());\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns wether or not you can make a call, if nothing is passed, Date.now() will be used to calculate (preferred)\r\n   * @param timestamp a timestamp for when you want to calculate ahead of time\r\n   * @returns whether or not you can make a call for the timestamp or the Date.now() value\r\n   */\r\n  public canMakeCall(timestamp?: number): boolean {\r\n    // Deals with permissions up to the number of calls\r\n    if (this.timestamps.length < this.numOfCalls) return true;\r\n    // If the timestamp or time now - the mils interval is greater than the first call in the queue, you can make a call\r\n    const time = timestamp ?? Date.now() - this.milsInterval;\r\n    let removed = 0;\r\n    while (this.timestamps.length > 0 && this.timestamps.peek() < time) {\r\n      removed++;\r\n      this.timestamps.dequeue();\r\n    }\r\n    // console.log(\"removed\", removed);\r\n    return this.timestamps.length < this.numOfCalls;\r\n  }\r\n\r\n  private milsUntilNextCall(timestamp?: number): number {\r\n    // The interval - The difference between the timestamp / Date.now() and the oldest timestamp\r\n    console.log(\"To wait\", (this.milsInterval - ((timestamp ?? Date.now()) - this.timestamps.peek())));\r\n    return this.milsInterval - ((timestamp ?? Date.now()) - this.timestamps.peek());\r\n  }\r\n}\r\n","export default class Queue<T> extends Array {\r\n\r\n  private constructor(...items: Array<any>) {\r\n    super(...items);\r\n  }\r\n\r\n  static create<T>(): Queue<T> {\r\n    return Object.create(Queue.prototype);\r\n  }\r\n  \r\n  public enqueue(value: T): void {\r\n    this.push(value);\r\n  }\r\n\r\n  public bulkEnqueue(values: Array<T>): void {\r\n    this.push(...values);\r\n  }\r\n\r\n  public dequeue(): T {\r\n    return this.shift();\r\n  }\r\n\r\n  public peek(): T {\r\n    return this[0];\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    return this.length === 0;\r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { Delay } from './Delay';\r\nexport { Limiter } from './Limiter';"],"names":[],"sourceRoot":""}